abstract 

( to see more on abstract class  se polymorphism codes)
1) Instance of 'abstract' class can't be created but 'Reference Variable' can be created
2) Abstract class may have 0 or more 'abstract' methods
3) abstract method can be without any definition ( or can have default implementation in base class )
4) abstract method can't be private
5) abstract class can contain non-abstract methods
6) abstract class can also contain virtual methods






error in 5-AccessModifiersPrac.cs    file


abstract class in polymorphism codes
//Create an abstract class
    abstract class Shape
    {
        //----------static variable in abstract class
        public static int counter;

        //----------normal variable in static class
        private int dimensions;

        //----------Abstract class can't have constructor
        /*void Shape()
        {
        }
         */

        //----------Abstract method
        public abstract void Draw();

        //----------non-abstract but a virtual method
        public virtual void HideMe()
        {
            Console.WriteLine("Shape:HideMe()");
        }

        //---------- non-abstracr or Concrete function
        public void Show()
        {
            Console.WriteLine("Shape:Show()");
        }
    }
